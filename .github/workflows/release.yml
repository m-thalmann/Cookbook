name: release

on:
  push:
    tags:
      - '*'

jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: build
        run: |
          npm i -g conventional-changelog-cli
          cd client
          npm i
          npm run build-prod
          cd ..
          conventional-changelog -p angular -o CHANGELOG.md -r 2
          tail -n +2 CHANGELOG.md > CHANGELOG #remove first line
          sed -i -e '/./,$!d' -e :a -e '/^\n*$/{$d;N;ba' -e '}' CHANGELOG #trim empty lines
          mkdir release
          cp -r api ./release/api
          cp -r client/dist/Cookbook ./release/client
          cp README.md ./release
          cp LICENSE ./release
          cp -r docs ./release/docs
          cd release
          zip -r ../Cookbook-${{ steps.get_version.outputs.VERSION }}.zip *
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Cookbook v${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          body_path: CHANGELOG
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Cookbook-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: Cookbook-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
