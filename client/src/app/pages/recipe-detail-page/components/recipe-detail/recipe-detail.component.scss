@use 'sass:map';
@use '@angular/material' as mat;
@use 'mixins';
@use 'theme';
@use 'variables' as *;
@use '../../styles/variables.scss' as *;

.navigate-back-button {
  position: fixed;
  top: 1em;
  left: 1em;
  z-index: 1;

  background: rgba(50, 50, 50, 0.25);
  color: white;
}

.content-spacer {
  height: $image-height;
  position: relative;
  pointer-events: none;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: -$content-border-radius;

    background: linear-gradient(0deg, rgba(0, 0, 0, 0.75) 0%, rgba(0, 0, 0, 0) 100%);
  }
}

header,
section {
  position: relative;
  z-index: 2;
}

header {
  display: flex;
  flex-direction: column;
  gap: 1em;

  padding: 0 $layout-padding;
  padding-top: $content-border-radius;
  padding-bottom: $content-border-radius;
  margin-bottom: 1.5em;

  border-radius: $content-border-radius;

  @include mat.elevation(4);

  @include theme.apply() using ($variables) {
    background: theme.adjust-color($variables, map.get($variables, 'background'), 1%);
  }

  .title {
    display: flex;
    align-items: center;

    margin-bottom: 0.25em;

    > div {
      flex: 1;

      h2 {
        margin-top: 0;
        margin-bottom: 0.5rem;

        > * {
          vertical-align: middle;
        }

        span {
          margin-right: 0.5em;
        }
      }

      h3 {
        margin: 0;

        font-weight: lighter;
        font-size: 1em;
        @include mixins.font-handwriting();
        opacity: 0.75;
      }
    }

    .options-button {
      margin-left: 0.25em;
    }
  }

  .tags {
    display: flex;
    gap: 0.5em;

    > * {
      all: unset;
      cursor: pointer;

      display: flex;
      align-items: center;
      gap: 0.5em;

      padding: 0.25em 0.75em;

      border-radius: 1em;
      overflow: hidden;

      transition: background $transition-time, bottom $transition-time;

      @include theme.apply() using ($variables) {
        background: map.get($variables, 'accent');
        color: map.get($variables, 'accent-text');

        &:hover {
          background: rgba(map.get($variables, 'accent'), 0.75);
        }
      }
    }
  }
}

section {
  padding-bottom: 1em;
  position: relative;
  z-index: 1;

  @include theme.apply() using ($variables) {
    background: map.get($variables, 'background');

    &:first-of-type::before {
      background: map.get($variables, 'background');
    }
  }

  &:first-of-type::before {
    content: '';
    position: absolute;
    top: calc(-1 * $content-border-radius - 1.5em);
    left: 0;
    right: 0;
    bottom: 100%;
  }

  &:last-of-type {
    padding-bottom: $main-space-bottom;
  }

  h3 {
    box-sizing: border-box;

    position: sticky;
    top: 0;
    z-index: 1;

    padding: 0.75em $layout-padding;
    margin: 0 0 0.5em 0;

    border-radius: 0.25em;

    @include mixins.font-handwriting();
    @include mat.elevation(2);

    @include theme.apply() using ($variables) {
      background: theme.adjust-color($variables, map.get($variables, 'background'), 5%);
    }
  }

  > div {
    padding: 0 $layout-padding;
  }

  &.properties {
    display: flex;

    > div {
      flex: 1;

      display: flex;
      gap: 0.5em;
      flex-direction: column;
      align-items: center;

      span {
        text-align: center;
      }
    }
  }

  &.ingredients {
    h3 {
      display: flex;
      align-items: center;

      margin-bottom: 0.5em;

      span {
        flex: 1;
      }
    }

    > div {
      .ingredient-group {
        &:not(:last-of-type) {
          padding-bottom: 0.5em;
          margin-bottom: 1em;

          @include theme.apply() using ($variables) {
            border-bottom: 1px solid rgba(map.get($variables, 'foreground'), 0.05);
          }
        }

        h4 {
          margin-top: 0;
          font-weight: 500;
        }

        .ingredient {
          display: flex;
          align-items: center;

          padding: 0.5em 0;

          .name {
            flex: 1;
          }
          .amount {
            opacity: 0.75;
          }
        }
      }
    }
  }

  &.preparation {
    h3 {
      margin-bottom: 1.5em;
    }

    .preparation-content {
      display: flex;
      flex-direction: column;
      gap: 1.5em;

      .preparation-times {
        display: flex;
        flex-direction: column;
        gap: 0.5em;

        > span {
          display: flex;
          align-items: center;
          gap: 0.5em;
        }
      }

      .preparation-content-container ::ng-deep {
        ul {
          padding: 0;
        }

        ol {
          list-style: none;
          counter-reset: preparation-counter;

          padding-left: 2.5em;

          > li {
            counter-increment: preparation-counter;

            position: relative;
            margin: 0 0 1rem 0;

            &::before {
              content: counter(preparation-counter);
              width: 2em;
              height: 2em;
              line-height: 2em;
              font-size: 0.9em;

              position: absolute;
              left: -2.5em;
              top: -0.3em;

              display: inline-flex;
              align-items: center;
              justify-content: center;

              border-radius: 50%;

              @include theme.apply() using ($variables) {
                background: map.get($variables, 'primary');
                color: map.get($variables, 'primary-text');
              }
            }
          }
        }
      }
    }
  }
}

@include mixins.desktop() {
  :host {
    display: grid;
    padding: 0 $layout-padding;
    position: relative;

    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 10em 10em auto;
    gap: 1em;

    grid-template-areas:
      'slider header'
      'slider section-properties'
      'section-description section-description'
      'section-ingredients section-preparation';
  }

  .navigate-back-button {
    display: none;
  }

  app-recipe-detail-image-slider {
    height: 100%;
    border-radius: 0.5em;

    grid-area: slider;

    @include mat.elevation(4);
  }

  .content-spacer {
    display: none;
  }

  header {
    grid-area: header;

    background: transparent !important;
    box-shadow: none;

    margin: 0;
  }

  section {
    &:first-of-type::before {
      display: none;
    }

    h3 {
      position: relative;

      margin: 0;
    }

    > div {
      padding: 0 0.5em;
    }

    &.properties {
      grid-area: section-properties;

      flex-direction: column;
      align-items: flex-start;
      justify-content: flex-start;
      align-self: start;
      gap: 0.5em;

      > div {
        flex-direction: row;

        .property-name {
          @include theme.apply() using ($variables) {
            color: map.get($variables, 'primary');
          }
        }
      }
    }

    &.description {
      grid-area: section-description;
    }

    &.ingredients {
      grid-area: section-ingredients;

      position: sticky;
      top: 1em;
      align-self: start;
    }

    &.preparation {
      grid-area: section-preparation;
    }
  }
}
