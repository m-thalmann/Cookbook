@use 'sass:map';
@use 'variables' as *;
@use 'mixins';
@use 'theme';

:host {
  display: block;
  padding: 0 $layout-padding;
}

.filters {
  display: flex;
  flex-direction: column;
  gap: 1.5em;

  margin: 2em 0;

  .sort-filter,
  .category-filter {
    button {
      display: flex;
      border-radius: 50%;

      border: none;
      color: inherit;
      box-sizing: inherit;
      font: inherit;

      &:not(:disabled) {
        cursor: pointer;
      }

      mat-icon {
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
  }

  .sort-filter {
    padding-right: 0;

    @include theme.apply() using ($variables) {
      button {
        background: theme.adjust-color($variables, map.get($variables, 'accent'), -2.5%);

        &:not(:disabled):hover {
          background: theme.adjust-color($variables, map.get($variables, 'accent'), -15%);
        }
      }
    }

    ::ng-deep > label > select {
      width: calc(100% - 2em);
    }

    button {
      padding: 0.25rem;
      width: 1.5em;
      height: 1.5em;
    }
  }

  .category-filter {
    @include theme.apply() using ($variables) {
      button {
        background: theme.adjust-color($variables, map.get($variables, 'background'), -10%);

        &:not(:disabled):hover {
          background: theme.adjust-color($variables, map.get($variables, 'background'), -20%);
        }
      }
    }

    button {
      padding: 0.125em;
      width: 1em;
      height: 1em;
    }

    &:not(.none-selected) ::ng-deep > select {
      width: calc(100% - 3.5em);
    }

    &.none-selected {
      &:not(.disabled) {
        ::ng-deep > label > select {
          opacity: 0.75;
        }
      }

      ::ng-deep > label > select {
        font-weight: lighter;
        width: 8.5em;
        max-width: calc(100% - 2.25em);
      }
    }
  }

  @media screen and (min-width: 500px) {
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;

    margin: 1em 0;
  }
}

.amount-results {
  margin-left: 0.5em;
  margin-bottom: 1.5em;
  opacity: 0.5;

  @include mixins.font-handwriting();
}

.recipes {
  display: grid;

  gap: 1em;

  @media screen and (min-width: 500px) {
    grid-template-columns: repeat(2, 1fr);
  }
  @media screen and (min-width: 800px) {
    grid-template-columns: repeat(3, 1fr);
  }

  .not-found-item {
    margin: 0;
    margin-top: 0.5em;

    font-style: italic;
  }
}

app-error-display {
  margin-top: 2em;
}

mat-paginator {
  margin-top: 2em;
  margin-left: calc(-1 * $layout-padding);
  margin-right: calc(-1 * $layout-padding);

  @media screen and (max-width: 600px) {
    padding: 1em 0;
  }

  @include mixins.desktop() {
    position: sticky;
    bottom: 0;
    z-index: 1;

    margin-left: calc(-1 * $layout-padding / 2);
    margin-right: calc(-1 * $layout-padding / 2);

    border-radius: 1em;
  }
}
